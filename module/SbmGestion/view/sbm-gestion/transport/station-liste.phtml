<?php
/**
 * Liste des stations
 *
 * Cette vue reçoit un objet effectifStations qui présente la méthode transportes($stationId)
 * donnant les effectifs des élèves transportés pour chaque identifiant $stationId.
 *
 * @project sbm
 * @package SbmGestion
 * @filesource view/sbm-gestion/transport/station-liste.phtml
 * @encodage UTF-8
 * @author DAFAP Informatique - Alain Pomirol (dafap@free.fr)
 * @date 13 avr. 2020
 * @version 2020-2.6.0
 */
use SbmCartographie\Model\Point;

$this->headLink()->appendStylesheet($this->basePath('/css/fam-icons-custom.css'));
$this->jQuery();
$jsCallback = '';
$jsTrigger = '';
// modèle de jsCallback pour selection
$modele = <<<EOT
$("#chk%d").change(function() {
    var action = ($(this).is(':checked'))?'check':'uncheck';
    $.ajax({
				url : '/sbmajaxtransport/'+action+'selectionstation/stationId:%d',
				success : function(data) {},
				error : function(xhr, ajaxOptions, thrownError) {
					alert(xhr.status + " " + thrownError);
				}
			});
  });
EOT;

$this->paginator->setDefaultItemCountPerPage($this->count_per_page);
$this->paginator->setCurrentPageNumber($this->page);
$stations = $this->paginator->getCurrentItems();
$url_origine = $this->url('sbmgestion/transport',
    [
        'action' => 'station-liste',
        'page' => $this->page
    ]);
$url_ajouter = $this->url('sbmgestion/transport',
    [
        'action' => 'station-ajout',
        'page' => $this->page
    ]);
$url_carte = $this->url('sbmcarte', [
    'action' => 'stations'
]);
$url_rapports = $this->url('sbmgestion/transport',
    [
        'action' => 'station-pdf',
        'page' => $this->page
    ]);
$url_nondesservies = $this->url('sbmgestion/transport',
    [
        'action' => 'stations-non-desservies',
        'id' => $this->page
    ]);
$url_localiser = $this->url('sbmgestion/transport',
    [
        'action' => 'station-localisation',
        'page' => $this->page
    ]);
$url_edit = $this->url('sbmgestion/transport',
    [
        'action' => 'station-edit',
        'page' => $this->page
    ]);
$url_delete = $this->url('sbmgestion/transport',
    [
        'action' => 'station-suppr',
        'page' => $this->page
    ]);
$url_relation = $this->url('sbmgestion/transport',
    [
        'action' => 'station-service',
        'id' => $this->page
    ]);
$url_group = $this->url('sbmgestion/transport',
    [
        'action' => 'station-group',
        'page' => $this->page
    ]);
$url_suppr_doublon = $this->url('sbmgestion/transport',
    [
        'action' => 'station-doublon',
        'page' => $this->page
    ]);
$url_retour = $this->url('sbmgestion/transport');
if ($this->layout()->hassbmservicesms) {
    $url_sms = $this->url('sbmservicesms', [
        'action' => 'envoi-groupe',
        'page' => $this->page
    ]);
}
$hiddens = [
    'back' => $url_origine
];
$menuImpression = $this->menuRapports(
    $this->url('sbmgestion/transport', [
        'action' => 'station-liste'
    ]), $url_rapports, 'fam-printer', null, $hiddens);
$hiddens = $menuImpression['hiddens'];
$actions = [
    'retour' => [
        'class' => 'fam-door-out',
        'formaction' => $url_retour,
        'title' => 'Retour'
    ],
    'rapports' => $menuImpression['content'],
    'nondesservies' => [
        'class' => 'fam-link-break',
        'formaction' => $url_nondesservies,
        'title' => 'Non desservies'
    ],
    'doublons' => [
        'class' => 'fam-text-replace',
        'formaction' => $url_suppr_doublon,
        'title' => 'Supprimer un doublon'
    ],
    'carte' => [
        'class' => 'fam-map-magnify',
        'formaction' => $url_carte,
        'title' => 'Carte des points d\'arrêt'
    ],
    'ajouter' => [
        'class' => 'fam-add',
        'formaction' => $url_ajouter,
        'title' => 'Nouvelle station'
    ]
];
?>
<h1>Liste des stations</h1>
<div id="liste-wrapper">
	<div id="liste-header" class="clearfix">
		<div class="menu float-left"><?=$this->listeZoneActions($hiddens, $actions);?></div>
		<div class="flashMessenger float-right">
			<?=$this->flashMessenger()->render('success');?>
			<?=$this->flashMessenger()->render('warning');?>
			<?=$this->flashMessenger()->render('error');?>
			<?=$this->flashMessenger()->render('info');?>
			<?=$this->flashMessenger()->render('default');?>
		</div>
	</div>
	<div id="liste-inner">
		<table class="stations">
			<tbody>
				<tr class="petit">
					<th></th>
					<th>Commune</th>
					<th>Nom</th>
					<th>Complément</th>
					<th>Visible</th>
					<th>Ouverte</th>
					<th>Inscrits</th>
					<th>Sélect.</th>
					<th></th>
				</tr>
            <?php foreach ($stations as $station) :?>
            <?php
                $pt = new Point($station->x, $station->y);
                $ptOk = $this->projection->isValid($pt, 'station'); // stations et
                                                                    // etablissements
                                                                    // ont la même config
                $nbInscrits = $this->effectifStations->transportes($station->stationId);
                // construction des JS pour selection
                $jsTrigger .= sprintf("$('#chk%d').trigger('change');\n",
                    $station->stationId);
                $jsCallback .= sprintf("$modele\n", $station->stationId,
                    $station->stationId);
                $css = $this->cycle([
                    "even",
                    "odd"
                ])->next();
                if (! $station->ouverte && ($nbInscrits > 0)) {
                    $css .= ' exces';
                }
                $hiddens = [
                    'stationId' => $station->stationId,
                    'origine' => $url_origine
                ];
                $buttons = [
                    'modifier' => [
                        'class' => 'fam-pencil',
                        'formaction' => $url_edit,
                        'title' => 'modifier'
                    ],
                    'localiser' => [
                        'class' => $ptOk ? 'fam-map-magnify' : 'fam-map-add',
                        'formaction' => $url_localiser,
                        'title' => $ptOk ? 'position sur la carte' : 'position manquante'
                    ],
                    'supprimer' => [
                        'class' => 'fam-delete',
                        'formaction' => $url_delete,
                        'title' => 'supprimer'
                    ],
                    'services' => [
                        'class' => 'fam-table-relationship',
                        'formaction' => $url_relation,
                        'title' => sprintf('circuits desservant la station %s - %s',
                            $station->nom, $station->commune)
                    ],
                    'eleves' => [
                        'class' => 'fam-group',
                        'formaction' => $url_group,
                        'title' => sprintf('élèves de la station %s - %s', $station->nom,
                            $station->commune)
                    ]
                ];
                if ($this->layout()->hassbmservicesms) {
                    $buttons['sms'] = [
                        'class' => 'fam-phone',
                        'formaction' => $url_sms,
                        'title' => 'Envoyer un SMS'
                    ];
                }
                ?>
                <tr class="petit <?=$css;?>">
					<td>
					<?php if (! $ptOk) :?>
					   <i class="fam-error"></i>
					<?php endif; ?>
					</td>
					<td class="commune">
						<?=$this->escapeHtml($station->commune);?></td>
					<td class="nom">
						<?=$this->escapeHtml($station->nom);?></td>
					<td class="complement">
						<?=$this->escapeHtml($station->alias);?></td>
					<td class="visible">
						<?=$station->visible ? 'Oui' : 'Non';?></td>
					<td class="ouverte">
						<?=$station->ouverte ? 'Oui' : 'Non';?></td>
					<td class="nbinscrits">
						<?=$nbInscrits;?></td>
					<td class="centre selection">
						<?=$this->renderCheckbox('selection', 'chk', $station->stationId, $station->selection)?>
						</td>
					<td class="boutons">
						<?=$this->listeLigneActions($station->stationId, $hiddens, $buttons);?></td>
				</tr>
            <?php endforeach;?>
            </tbody>
		</table>
	</div>
	<div id="liste-footer">
		<div class="pagination-wrapper clearfix">
			<?=$this->paginationControl($this->paginator, 'Sliding', 'sbm/pagination', []);?></div>
		<div class="criteres-wrapper">
         	<?=$this->form()->openTag($this->criteres_form);?>
         	<?=$this->formCollection($this->criteres_form, true);?>
         	<?=$this->form()->closeTag();?>
         </div>
	</div>
</div>
<?php
$this->headScript()->captureStart();
?>
$(function() {
function triggerChange() {
<?=$jsTrigger;?>}
<?=$jsCallback;?>
});
<?php
$this->headScript()->captureEnd();