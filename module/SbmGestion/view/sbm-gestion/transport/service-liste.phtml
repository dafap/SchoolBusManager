<?php
/**
 * Liste des services
 *
 * Cette vue reçoit un objet effectifServices qui présente la méthode transportes($serviceId)
 * donnant les effectifs des élèves transportés pour chaque identifiant $serviceId.
 *
 * @project sbm
 * @package SbmGestion
 * @filesource view/sbm-gestion/transport/service-liste.phtml
 * @encodage UTF-8
 * @author DAFAP Informatique - Alain Pomirol (dafap@free.fr)
 * @date 27 mars 2020
 * @version 2020-2.6.0
 */
$this->headLink()->appendStylesheet($this->basePath('/css/fam-icons-custom.css'));
$this->jQuery();
$jsCallback = '';
$jsTrigger = '';
// modèle de jsCallback pour selection
$modele = <<<EOT
$("#chk%s").change(function() {
    var action = ($(this).is(':checked'))?'check':'uncheck';
    $.ajax({
				url : '/sbmajaxtransport/'+action+'selectionservice/serviceId:%s',
				success : function(data) {},
				error : function(xhr, ajaxOptions, thrownError) {
					alert(xhr.status + " " + thrownError);
				}
			});
  });
EOT;

$this->paginator->setDefaultItemCountPerPage($this->count_per_page);
$this->paginator->setCurrentPageNumber($this->page);
$services = $this->paginator->getCurrentItems();
$url_ajouter = $this->url('sbmgestion/transport',
    [
        'action' => 'service-ajout',
        'page' => $this->page
    ]);
$url_rapports = $this->url('sbmgestion/transport',
    [
        'action' => 'service-pdf',
        'page' => $this->page
    ]);
$url_retour = $this->url('sbmgestion/transport');

$url_edit = $this->url('sbmgestion/transport',
    [
        'action' => 'service-edit',
        'page' => $this->page
    ]);
$url_delete = $this->url('sbmgestion/transport',
    [
        'action' => 'service-suppr',
        'page' => $this->page
    ]);
$url_relation = $this->url('sbmgestion/transport',
    [
        'action' => 'service-etablissement',
        'id' => $this->page
    ]);
$url_group = $this->url('sbmgestion/transport',
    [
        'action' => 'service-group',
        'id' => $this->page
    ]);
if ($this->layout()->hassbmservicesms) {
    $url_sms = $this->url('sbmservicesms',
        [
            'action' => 'envoi-groupe',
            'page' => $this->page
        ]);
}
$hiddens = [];
$menuImpression = $this->menuRapports(
    $this->url('sbmgestion/transport', [
        'action' => 'service-liste'
    ]), $url_rapports, 'fam-printer', null, $hiddens);
$hiddens = $menuImpression['hiddens'];
$actions = [
    'retour' => [
        'class' => 'fam-door-out',
        'formaction' => $url_retour,
        'title' => 'Retour'
    ],
    'rapports' => $menuImpression['content'],
    'ajouter' => [
        'class' => 'fam-add',
        'formaction' => $url_ajouter,
        'title' => 'Nouveau service'
    ]
];
?>
<h1>Liste des services</h1>
<div id="liste-wrapper">
	<div id="liste-header" class="clearfix">
		<div class="menu float-left"><?=$this->listeZoneActions($hiddens, $actions);?></div>
		<div class="flashMessenger float-right">
			<?= $this->flashMessenger()->render('success');?>
			<?= $this->flashMessenger()->render('warning');?>
			<?= $this->flashMessenger()->render('error');?>
			<?= $this->flashMessenger()->render('info');?>
			<?= $this->flashMessenger()->render('default');?>
		</div>
	</div>
	<div id="liste-inner">
		<table class="liste-inner services">
			<tbody>
				<tr>
					<th>Code</th>
					<th>Départ</th>
					<th>Arrivée</th>
					<th>Transporteur</th>
					<th>Opérateur</th>
					<th>Capacité</th>
					<th>Inscrits</th>
					<th>Sélect.</th>
					<th></th>
				</tr>
            <?php foreach ($services as $service) :?>
            <?php
                $serviceId = sprintf('%d|%s|%d|%d|%d', $service->millesime,
                    $service->ligneId, $service->sens, $service->moment, $service->ordre);
                if ($this->effectifServices) {
                    $nbInscrits = $this->effectifServices->transportes($service->ligneId,
                        $service->sens, $service->moment, $service->ordre);
                } else {
                    $nbInscrits = 0;
                }
                // construction des JS pour selection
                $jsTrigger .= sprintf("$('#chk%s').trigger('change');\n", $serviceId);
                $jsCallback .= sprintf("$modele\n", $serviceId, $serviceId);
                $css = $this->cycle([
                    "even",
                    "odd"
                ])->next();
                if ($service->nbPlaces < $nbInscrits) {
                    $css .= ' exces';
                }
                $hiddens = [
                    'ligneId' => $service->ligneId,
                    'sens' => $service->sens,
                    'moment' => $service->moment,
                    'ordre' => $service->ordre,
                    'origine' => 'service-liste'
                ];
                // $designationService = sprintf('%s-%d%d%d', $service->ligneId,
                // $service->sens, $service->moment, $service->ordre);
                $designationService = $service->designation();
                $buttons = [
                    'modifier' => [
                        'class' => 'fam-pencil',
                        'formaction' => $url_edit,
                        'title' => 'modifier ' . $designationService
                    ],
                    'supprimer' => [
                        'class' => 'fam-delete',
                        'formaction' => $url_delete,
                        'title' => 'supprimer ' . $designationService
                    ],
                    'etablissements' => [
                        'class' => 'fam-table-relationship',
                        'formaction' => $url_relation,
                        'title' => 'établissements desservis par le circuit ' .
                        $designationService
                    ],
                    'eleves' => [
                        'class' => 'fam-group',
                        'formaction' => $url_group,
                        'title' => 'élèves inscrits sur le circuit ' . $designationService
                    ]
                ];
                if ($this->layout()->hassbmservicesms) {
                    $buttons['sms'] = [
                        'class' => 'fam-phone',
                        'formaction' => $url_sms,
                        'title' => 'Envoyer un SMS'
                    ];
                }
                ?>
                <tr class="petit <?=$css;?>">
					<td class="designationService">
						<?=$this->escapeHtml($designationService);?></td>
					<td class="depart">
						<?=$service->sens==1 ? $this->escapeHtml($service->extremite1) : $this->escapeHtml($service->extremite2);?></td>
					<td class="arrivee">
						<?=$service->sens==1 ? $this->escapeHtml($service->extremite2) : $this->escapeHtml($service->extremite1);?></td>
					<td class="transporteur">
						<?=$this->escapeHtml($service->transporteur);?></td>
					<td class="operateur">
						<?=$this->escapeHtml($service->operateur);?></td>
					<td class="nbplaces">
						<?=$this->escapeHtml($service->nbPlaces);?></td>
					<td class="nbinscrits">
						<?=$nbInscrits;?></td>
					<td class="centre selection">
						<?=$this->renderCheckbox('selection', 'chk' . str_replace('|', '', $serviceId), $service->selection);?>
						</td>
					<td class="boutons">
            			<?=$this->listeLigneActions($serviceId, $hiddens, $buttons);?></td>
				</tr>
            <?php
            endforeach
            ;
            ?>
            </tbody>
		</table>
	</div>
	<div id="liste-footer">
		<div class="pagination-wrapper clearfix">
			<?=$this->paginationControl($this->paginator, 'Sliding', 'sbm/pagination', []);?></div>
		<div class="criteres-wrapper">
	    	<?=$this->form()->openTag($this->criteres_form);?>
	    	<?=$this->formCollection($this->criteres_form, true);?>
	    	<?=$this->form()->closeTag();?>
        </div>
	</div>
</div>
<?php
$this->headScript()->captureStart();
?>
$(function() {
function triggerChange() {
<?=$jsTrigger;?>}
<?=$jsCallback;?>
});
<?php
$this->headScript()->captureEnd();