<?php
/**
 * Page d'entrée dans l'espace Parents - Version Arlysère
 *
 * Elle dispose des propriétés suivantes :
 * 'theme' : objet SbmInstallation\Model\Theme
 * 'namespacectrl' : controle du namespace
 * 'responsable' : objet responsable créé lors du login
 * 'calendar' : objet SbmCommun\Model\Db\Service\Table\System\Calendar
 * 'inscrits' : résultat de la requête Sbm\Db\Query\ElevesScolarites::getElevesInscrits()
 * 'preinscrits' => résultat de la requête Sbm\Db\Query\ElevesScolarites::getElevesPreinscritsOuEnAttente()
 * 'affectations' => résultat de la requête Sbm\Db\Query\AffectationsServicesStations
 * 'resultats' => objet SbmCommun\Model\Paiement\resultats présentant les justificatifs des sommes dues
 * 'paiements' => ensemble des paiements enregistrés pour ce parent durant cette année scolaire
 * 'factures' => ensemble des factures enregistrées pour ce parent durant cette année scolaire
 * 'client' : tableau décrivant l'organisateur (array)
 * 'accueil' : url du site de l'organisateur
 * 'adresse' : tableau de l'adresse du parent
 *
 * @project sbm
 * @package SbmParent/view/sbm-parent/index
 * @filesource index.phtml
 * @encodage UTF-8
 * @author DAFAP Informatique - Alain Pomirol (dafap@free.fr)
 * @date 2 avr. 2020
 * @version 2020-2.6.0
 */
use SbmBase\Model\DateLib;
use SbmBase\Model\Session;
use SbmCommun\Model\Paiements\GrilleTarifInterface;

// Nomenclature
$rendez_vous = 'POINT INFO BUS';
// ================================================================================
$this->headLink()->appendStylesheet($this->basePath('/css/fam-icons-custom.css'));
$this->themeCss('sbm-parent/index', 'index.css');
$this->jQuery('jquery-ui');
$this->themeJS('sbm-parent', 'index.js');
$fmt = new NumberFormatter('fr_FR', NumberFormatter::CURRENCY);
// affichage des circuits, stations et horaires
$avant_fin_aout = '';
if ((new \DateTime()) <
    (new \DateTime(Session::get('as')['dateDebut']))->modify('8 days ago')) {
    $avant_fin_aout = 'invisible';
}
// initialisation nécessaire pour le popup help-preinscrits-content :
$permanences = '';
$enAttente = false;
$adresse_organisateur = implode(', ',
    [
        $this->client['name'],
        implode(', ', $this->client['adresse']),
        sprintf('%s %s', $this->client['code_postal'], $this->client['commune'])
    ]);
$nbPreinscrits = $this->preinscrits->count();
$nbInscrits = $this->inscrits->count();
$nbPaiements = $this->paiements->count();
$etatDuSite = $this->calendar->getEtatDuSite();
// pour sadmin, autoriser les inscriptions et le paiement
if ($this->sadmin) {
    $etatDuSite['etat'] = $this->calendar::ETAT_PENDANT;
    $etatDuSite['inscription'] = true;
}
$dateFin = $etatDuSite['dateFin']->format('d/m/Y');
$url_ajoutEleve = $this->url('sbmparent', [
    'action' => 'reinscription-eleve'
]);
$url_payer = $this->url('sbmpaiement', [
    'action' => 'formulaire'
]);
$url_horaires = $this->url('sbmparent', [
    'action' => 'horaires'
]);
$url_envoi_photo = $this->url('sbmparent', [
    'action' => 'envoiphoto'
]);
$url_edit = $this->url('sbmparent', [
    'action' => 'edit-eleve'
]);
$url_delete = $this->url('sbmparent', [
    'action' => 'suppr-eleve'
]);
$url_attente = $this->url('sbmparent', [
    'action' => 'attente-eleve'
]);
$url_facture = $this->url('sbmdocument', [
    'action' => 'facture'
]);
?>
<div id="winpopup">
	<div id="winpopup-content"
		style="margin-left: 30px; margin-right: 30px;"></div>
</div>
<div class="clearfix">
	<h1>Espace parent</h1>
	<div class="flashMessenger float-right">
<?=$this->flashMessenger()->render('success');?>
<?=$this->flashMessenger()->render('warning');?>
<?=$this->flashMessenger()->render('error');?>
<?=$this->flashMessenger()->render('info');?>
<?=$this->flashMessenger()->render('default');?>
	</div>
</div>
<?php if ($nbInscrits == 0 && $nbPreinscrits == 0) : ?>
<div id="parent-wrapper" class="explication">
	<?php
    switch ($etatDuSite['etat']) {
        case $this->calendar::ETAT_AVANT:
            echo include $this->theme->getIncludeView('sbm-parent/index/index-avant');
            break;
        case $this->calendar::ETAT_PENDANT:
            echo include $this->theme->getIncludeView('sbm-parent/index/index-pendant');
            break;
        case $this->calendar::ETAT_APRES:
            echo include $this->theme->getIncludeView('sbm-parent/index/index-apres');
            break;
        default:
            echo include $this->theme->getIncludeView('sbm-parent/index/index-ferme');
            break;
    }
    ?>
</div>
<?php else : ?>
<div id="parent-wrapper">
	<div id="parent-inscrits">
    <?php if ($nbInscrits) : ?>
    <fieldset class="sbm-page1">
			<legend>Enfants inscrits</legend>
			<table class="parent eleve">
				<tbody>
					<tr class="petit">
						<th>Nom</th>
						<th>Prénom</th>
						<th>Etablissement scolaire</th>
						<th>Commune</th>
						<th>Tarif</th>
						<th class="<?=$avant_fin_aout;?>">Circuit</th>
						<th class="<?=$avant_fin_aout;?>">Arrêt</th>
						<th></th>
					</tr>
        <?php
        $photo_manquante = false;
        foreach ($this->inscrits as $row) {
            $hiddens_ligne = [];
            $photo_manquante |= ! $row['hasphoto'];
            $reseau = $this->affectations->getCorrespondances($row['eleveId']);
            $nbAffectations = $reseau->count();
            $circuit = $station = $entity = [];
            $msgphoto = $row['hasphoto'] ? '' : 'Pas de photo';
            if ($nbAffectations) {
                // construction des tableaux $entity, $station et $circuit sans doublons
                foreach ($reseau as $transport) {
                    $service_transporteur = $transport['service1Id'] . ' - ' .
                        $transport['transporteur1'];
                    $station_commune = $transport['station1'] . ' - ' .
                        $transport['commune1'];
                    $circuitId = $transport['circuit1Id'];
                    $key = md5(
                        sprintf('%s;%s;%d', $service_transporteur, $station_commune,
                            $circuitId));
                    $entity[$key] = $service_transporteur;
                    $station[$key] = $station_commune;
                    $circuit[$key] = $circuitId;
                    $correspondance = ! empty($transport['service2Id']) ||
                        ! empty($transport['station2Id']);
                    if ($correspondance) {
                        if (! empty($transport['service2Id'])) {
                            $service_transporteur = $transport['service2Id'] . ' - ' .
                                $transport['transporteur2'];
                        } else {
                            $service_transporteur = '';
                        }
                        if (! empty($transport['station2Id'])) {
                            $station_commune = $transport['station2'] . ' - ' .
                                $transport['commune2'];
                        } else {
                            $station_commune = '';
                        }
                        if (! empty($transport['circuit2Id'])) {
                            $circuitId = $transport['circuit2Id'];
                        } else {
                            $circuitId = 0;
                        }
                        $key = md5(
                            sprintf('%s;%s;%d', $service_transporteur, $station_commune,
                                $circuitId));
                        $entity[$key] = $service_transporteur;
                        $station[$key] = $station_commune;
                        $circuit[$key] = $circuitId;
                    }
                }
                $entity = array_values($entity);
                $station = array_values($station);
                $circuit = array_values($circuit);
            }
            $css = $this->cycle([
                "odd",
                "even"
            ])->next();
            // identité, scolarité : lignes 1 à 4
            $colonne1_5 = '<td %s' . $nbAffectations . '>' . $row['nom'] . '</td>';
            $colonne1_5 .= '<td %s' . $nbAffectations . '>' . $row['prenom'] . '</td>';
            $colonne1_5 .= '<td %s' . $nbAffectations . '>' . $row['etablissement'] .
                '</td>';
            $colonne1_5 .= '<td %s' . $nbAffectations . '>' . $row['communeEtablissement'] .
                '</td>';
            $colonne1_5 .= '<td %s' . $nbAffectations . '>' .
                sprintf('%s %s', $row['grilleTarifR1'],
                    $row['reductionR1'] ? 'Réduit' : 'Normal') . '</td>';
            // on prépare le code HTML avant pour ajuster les "rowspan", les boutons
            // et les hiddens si nécessaire
            $boutons_ligne = [
                'horaires' => [
                    'class' => 'button ligne',
                    'formaction' => $url_horaires,
                    'value' => 'Horaires'
                ],
                'photo' => [
                    'class' => 'button ligne',
                    'formaction' => $url_envoi_photo,
                    'value' => 'Envoyer une photo'
                ]
            ];
            if ($avant_fin_aout) {
                unset($boutons_ligne['horaires']);
            }
            $nbCircuits = count($circuit);
            switch ($nbCircuits) {
                case 0:
                    if ($row['hasphoto']) {
                        // pas de bouton, pas d'affectation donc pas d'horaire
                        $code_boutons = '';
                    } else {
                        // bouton photo et pas d'horaire
                        unset($boutons_ligne['horaires']);
                        $hiddens_ligne['eleveId'] = $row['eleveId'];
                        $code_boutons = $this->listeLigneActions($row['eleveId'],
                            $hiddens_ligne, $boutons_ligne);
                    }
                    $colonne1_5 = str_replace(' %s' . $nbAffectations, '', $colonne1_5);
                    $ligneHtml = '<tr class="petit ' . $css . '">' . $colonne1_5;
                    $ligneHtml .= sprintf('<td class="%1$s"></td><td class="%1$s"></td>',
                        $avant_fin_aout); // affectation
                    $ligneHtml .= "<td>$code_boutons</td><td class=\"alert\">$msgphoto</td></tr>\n";
                    break;
                case 1:
                    if (empty($circuit[0])) {
                        // il y a des points d'arrêt mais pas de circuit donc pas
                        // d'horaire
                        unset($boutons_ligne['horaires']);
                    } else {
                        $hiddens_ligne = [
                            'circuit1Id' => $circuit[0],
                            'etablissementId' => $row['etablissementId']
                        ];
                    }
                    if ($row['hasphoto']) {
                        unset($boutons_ligne['photo']);
                        if (empty($circuit[0])) {
                            $code_boutons = '';
                        } else {
                            // bouton horaires
                            $code_boutons = $this->listeLigneActions($row['eleveId'],
                                $hiddens_ligne, $boutons_ligne);
                        }
                    } else {
                        // au moins le bouton photo
                        $hiddens_ligne['eleveId'] = $row['eleveId'];
                        $code_boutons = $this->listeLigneActions($row['eleveId'],
                            $hiddens_ligne, $boutons_ligne);
                    }
                    $colonne1_5 = str_replace(' %s' . $nbAffectations, '', $colonne1_5);
                    $ligneHtml = '<tr class="' . $css . '">' . $colonne1_5; // identité,
                                                                            // scolarité
                    $ligneHtml .= '<td class="' . $avant_fin_aout . '">' . $entity[0] .
                        '</td><td class="' . $avant_fin_aout . '">' . $station[0] . '</td>';
                    $ligneHtml .= '<td>' . $code_boutons .
                        "</td><td class=\"alert\">$msgphoto</td></tr>\n";
                    break;
                default:
                    $colonne1_5 = str_replace('%s' . $nbAffectations,
                        'rowspan="' . $nbCircuits . '"', $colonne1_5);
                    $lignesTableau = [];
                    $hiddens_ligne = [
                        'enfant' => $row['prenom'] . ' ' . $row['nom']
                    ];
                    for ($i = 0; $i < $nbCircuits; $i ++) {
                        if (! empty($circuit[$i])) {
                            $hiddens_ligne['circuit' . ($i + 1) . 'Id'] = $circuit[$i];
                        }
                        $lignesTableau[$i] = '<tr class="' . $css . '">' . $colonne1_5;
                        $lignesTableau[$i] .= '<td class="' . $avant_fin_aout . '">' .
                            $entity[$i] . '</td><td class="' . $avant_fin_aout . '">' .
                            $station[$i] . '</td>';
                        // on ne termine pas la ligne 0 pour pouvoir rajouter le bouton et
                        // les hiddens
                        if ($i > 0) {
                            $lignesTableau[$i] .= "</tr>\n";
                        }
                        $colonne1_5 = '';
                    }
                    // pour terminer la ligne 0
                    if (empty($hiddens_ligne)) {
                        if ($row['hasphoto']) {
                            // pas de bouton
                            $lignesTableau[0] .= "<td></td><td class=\"alert\">$msgphoto</td></tr>\n";
                        } else {
                            // bouton `Envoyer une photo`
                            $hiddens_ligne['eleveId'] = $row['eleveId'];
                        }
                    } else {
                        $hiddens_ligne['etablissementId'] = $row['etablissementId'];
                        if ($row['hasphoto']) {
                            // bouton `Horaires`
                            unset($boutons_ligne['photo']);
                        } else {
                            // les 2 boutons
                            $hiddens_ligne['eleveId'] = $row['eleveId'];
                        }
                    }
                    if (empty($hiddens_ligne) && $row['hasphoto']) {
                    } else {
                        $code_boutons = $this->listeLigneActions($row['eleveId'],
                            $hiddens_ligne, $boutons_ligne);
                        $lignesTableau[0] .= '<td rowspan="' . $nbCircuits . '">' .
                            $code_boutons .
                            "</td><td class=\"alert\"rowspan=\"$nbCircuits\">$msgphoto</td></tr>\n";
                    }
                    $ligneHtml = implode('', $lignesTableau);
                    break;
            }
            echo $ligneHtml;
        }
        ?>
            </tbody>
			</table>
		</fieldset>
<?php if ($photo_manquante): ?>
        <p class="important">Veuillez transmettre une photo d'identité
			récente pour obtenir la carte de transport.</p>
<?php elseif (Session::get('as')['dateDebut'] >= date('Y-m-d')):?>
<?php if ($nbInscrits > 1):?>
		<p class="sbm-description">Vous allez recevoir les cartes de transport
			par courrier fin août ou courant septembre.</p>
<?php else :?>
        <p class="sbm-description">Vous allez recevoir la carte de
			transport par courrier fin août ou courant septembre.</p>
<?php endif;?>
<?php endif;?>
		<p class="sbm-description">Les circuits et horaires seront
			consultables ici 8 jours avant la rentrée scolaire.</p>
    <?php endif; ?>
    </div>
	<div id="parent-preinscrits">
    <?php if ($nbPreinscrits) : ?>
    <fieldset class="sbm-page1">
			<legend>Enfants préinscrits</legend>
			<table class="parent eleve">
				<tbody>
					<tr class="petit">
						<th>Nom</th>
						<th>Prénom</th>
						<th>Etablissement scolaire</th>
						<th>Commune</th>
						<th>Tarif</th>
					</tr>
            <?php
        $alerte = false;
        foreach ($this->preinscrits as $row) {
            // $peutPayer = $row['grilleCode'] != GrilleTarifInterface::NON_AYANT_DROIT ||
            // $row['derogation'] >= 1;
            $peutPayer = true;
            if ($row['selectionScolarite']) {
                $grilleTarif = '<span class="exces" title="Cet enfant n\'est pas inscrit.' .
                    ' Respectez les délais.">en attente</span>';
                $enAttente = true;
            } elseif ($peutPayer) {
                $grilleTarif = sprintf('%s %s', $row['grilleTarifR1'],
                    $row['reductionR1'] ? 'Réduit' : 'Normal');
            } else {
                $msgalerte = 'Pour obtenir une éventuelle dérogation, prenez contact avec le service des transports de : ';
                $msgalerte .= $this->client['name'];
                $grilleTarif = '<span class="exces" title="' . $msgalerte . '">' .
                    $row['grilleTarifR1'] . '</span>';
                $msgalerte .= ' (' . $this->telephone($this->client['telephone']) . ') ou ';
                $msgalerte .= '<a href="' .
                    $this->url('sbmparentconfig', [
                        'action' => 'message'
                    ]) . '">Écrire</a>';
                $alerte = true;
            }
            $hiddens = [
                'id' => $row['eleveId']
            ];
            if ($etatDuSite['inscription']) {
                $buttons = [
                    'modifier' => [
                        'class' => 'button ligne',
                        'formaction' => $url_edit,
                        'title' => 'modifier la scolarité de ' . $row['prenom'],
                        'value' => 'Modifier ou compléter'
                    ],
                    'supprimer' => [
                        'class' => 'button ligne',
                        'formaction' => $url_delete,
                        'title' => 'supprimer l\'incription de ' . $row['prenom'],
                        'value' => 'Supprimer'
                    ]
                ];
                if ($this->responsable->paiementenligne) {
                    $attenteValue = $row['selectionScolarite'] ? 'Reprendre cet enfant' : 'Mettre en attente de paiement';
                    $attenteTitle = $row['selectionScolarite'] ? 'Remettre ' .
                        $row['prenom'] . ' dans' : 'Retirer ' . $row['prenom'] . ' de';
                    $attenteTitle .= ' la liste des inscriptions à payer';
                    $buttons['attente'] = [
                        'class' => 'button ligne',
                        'formaction' => $url_attente,
                        'title' => $attenteTitle,
                        'value' => $attenteValue
                    ];
                }
            } else {
                $buttons = [];
            }
            if ($row['hasphoto']) {
                $pasdephoto = '';
            } else {
                $hiddens['eleveId'] = $row['eleveId'];
                $buttons['photo'] = [
                    'class' => 'button ligne',
                    'formaction' => $url_envoi_photo,
                    'value' => 'Envoyer une photo'
                ];
                $pasdephoto = ' Pas de photo';
            }
            $btligne = $this->listeLigneActions($row['eleveId'], $hiddens, $buttons);
            $modeleligne = <<< EOT
            <tr class="petit %s">
                <td>%s</td>
                <td>%s</td>
                <td>%s</td>
                <td>%s</td>
                <td>%s</td>
                <td>%s</td>
                <td class="alert">%s</td>
            </tr>
            EOT;
            echo sprintf($modeleligne, $this->cycle([
                "odd",
                "even"
            ])->next(), $row['nom'], $row['prenom'], $row['etablissement'],
                $row['communeEtablissement'], $grilleTarif, $btligne, $pasdephoto);
        }
        if ($alerte) {
            echo sprintf('<tr class="petit alert"><td colspan="7">%s</td></tr>',
                $msgalerte);
        }
        ?>
            </tbody>
				<tfoot>
					<tr>
						<th colspan="4">Total à payer</th>
						<td class="align-right">
							<?=$fmt->formatCurrency($this->resultats->getMontantTotal(), 'EUR');?>
							</td>
					</tr>
					<tr>
						<th colspan="4">Déjà payé</th>
						<td class="align-right">
							<?=$fmt->formatCurrency($this->resultats->getPaiementsMontant(), 'EUR');?>
							</td>
					</tr>
					<tr>
						<th colspan="4">Solde</th>
						<th class="align-right">
							<?=$fmt->formatCurrency($this->resultats->getSolde(), 'EUR');?>
							</th>
					</tr>
				</tfoot>
			</table>
		</fieldset>
    <?php endif; ?>
    <?php if ($etatDuSite['inscription']):?>
        <div class="bouton-inscrire">
			<div class="menu clearfix">
        <?php
        $boutons = [
            'inscrire' => [
                'class' => 'button default float-right left-10px',
                'formaction' => $url_ajoutEleve,
                'value' => 'Inscrire un autre enfant'
            ]
        ];
        if ($this->resultats->getSolde() > 0 && $this->responsable->paiementenligne) {
            if ($enAttente) {
                $payerTitle = "valider et payer toutes les incriptions\nqui ne sont pas en attente.";
            } else {
                $payerTitle = "valider et payer toutes les inscriptions\nde la liste des enfants préinscrits.";
            }
            $boutons['payer'] = [
                'class' => 'button default float-right left-10px',
                'formaction' => $url_payer,
                'value' => 'Valider la liste et payer',
                'title' => $payerTitle
            ];
        }
        $boutons['facture'] = [
            'class' => 'button default float-right left-10px',
            'formaction' => $url_facture,
            'formtarget' => '_blank',
            'value' => 'Imprimer la facture'
        ];
        echo $this->listeZoneActions(
            [
                'montant' => $this->resultats->getSolde(),
                'namespacectrl' => $this->namespacectrl
            ], $boutons);
        ?>
            </div>
		</div>
        <?php if (! $this->responsable->paiementenligne && $this->resultats->getSolde() > 0) : ?>
        <p class="sbm-description">Les habitants de votre commune ne
			peuvent pas payer en ligne. Prenez contact avec le service Transport
			pour connaitre la marche à suivre pour votre cas particulier.</p>
        <?php elseif ($this->resultats->getSolde() > 0) : ?>
        <?php
            switch ($etatDuSite['etat']) {
                case $this->calendar::ETAT_PENDANT:
                    $permanences = $this->calendar->getPermanences(
                        $this->responsable->commune);
                    switch (count($permanences)) {
                        case 0:
                            $permanences = '';
                            break;
                        case 1:
                            $permanences = current($permanences);
                            break;
                        default:
                            $permanences = implode(', ', $permanences);
                            break;
                    }
                    $msg = <<<EOT
                    La carte de transport ne sera délivrée que si vous avez transmis une photo d'identité
                    de l'élève et payé son abonnement.<br>
                    L'inscription doit être réglée avant le %s pour retenir une place définitive dans
                    le circuit et recevoir la carte de transport par la poste.<br>
                    Sinon, rendez-vous au %s pour connaitre
                    la suite donnée à votre demande, payer et retirer la carte de transport.<br>
                    EOT;
                    $msg = sprintf($msg, $dateFin, $rendez_vous);
                    break;
                case $this->calendar::ETAT_APRES:
                    $permanences = $this->calendar->getPermanences(
                        $this->responsable->commune);
                    switch (count($permanences)) {
                        case 0:
                            $permanences = '';
                            break;
                        case 1:
                            $permanences = current($permanences);
                            break;
                        default:
                            $permanences = implode(', ', $permanences);
                            break;
                    }
                    $msg = <<<EOT
                    La carte de transport ne sera délivrée que si vous avez transmis une photo d'identité
                    de l'élève et payé son abonnement.<br>
                    Si nécessaire, vous pouvez vous rendre à une permanence qui se tiendra à %s pour connaitre
                    la suite donnée à votre demande, payer et retirer la carte de transport.<br>
                    Pour les habitants de %s.<br>
                    Si la date est passée, prenez rendez-vous.
                    EOT;
                    $msg = sprintf($msg, $adresse_organisateur, $permanences);
                    break;
                default:
                    // ici les inscriptions sont ouvertes. Pas de ETAT_AVANT ou de
                    // ETAT_FERME
                    $msg = '';
                    break;
            }
            ?>
		<p class="sbm-description">
			<i id="help-preinscrits" title="Comment payer ?" class="fam-help"></i> <?=$msg;?>
		</p>
		<?php endif;?>
		<div id="help-preinscrits-content" class="invisible">
			<p>Vous pouvez :</p>
			<ul>
				<li style="margin-bottom: 0.4rem;">payer en ligne à l'aide d'une carte bancaire
				avant le <?= $dateFin;?>. Vous recevrez alors la carte de transport par la poste.</li>
				<li style="margin-bottom: 0.4rem;">adresser un chèque du montant indiqué à
				l'adresse ci-dessous avant le <?= $dateFin;?>. Vous recevrez alors la carte de transport
				par la poste.</li>
				<li>vous rendre à <?=$adresse_organisateur;?> (pour les habitant de
				<?=$permanences;?>) pour payer en espèces ou par chèque et
				retirer la carte de transport.</li>
			</ul>
			<div class="centre">
				<?=$this->client['name'];?><br>
				<?=implode('<br>',$this->client['adresse']);?><br>
				<?=$this->client['code_postal']; ?> <?=$this->client['commune'];?><br>
				Tél. <?=$this->telephone($this->client['telephone']);?>
		    </div>
		</div>
	<?php elseif ($this->resultats->getSolde() > 0):?>
	<?php
        $url_contact = $this->url('login', [
            'action' => 'contact'
        ]);
        $msg = 'Les insciptions étant closes, <a href="%s">prenez contact avec le service de transport.</a>';
        $msg = sprintf($msg, $url_contact);
        ?>
	    <p class="sbm-description">
			<i class="fam-help"></i> <b>Comment payer ?</b> <?=$msg;?>
		</p>
    <?php endif;?>
	</div>
	<div id="wrapper-finance" class="clearfix">
		<div id="parent-paiements" class="float-left">
    	<?php if ($nbPaiements) : ?>
    		<fieldset class="sbm-page1">
				<legend>Paiements enregistrés</legend>
				<table class="parent paiement">
					<tbody>
						<tr>
							<th>Date du paiement</th>
							<th>Moyen de paiement</th>
							<th>Montant</th>
						</tr>
            <?php foreach ($this->paiements as $row) :?>
            			<tr>
							<td><?=DateLib::formatDateTimeFromMysql($row->datePaiement);?></td>
							<td><?=$row->modeDePaiement;?></td>
							<td class="align-right"><?=$fmt->formatCurrency($row->montant, 'EUR');?></td>
						</tr>
        	<?php endforeach;?>
            		</tbody>
				</table>
			</fieldset>
    	<?php endif; ?>
    	</div>
		<div id="parent-factures" class="float-left">
    	<?php if ($this->factures->count()) : ?>
    		<fieldset class="sbm-page1">
				<legend>Factures émises</legend>
				<table class="parent factures">
					<tbody>
						<tr>
							<th>Numéro</th>
							<th>Date</th>
							<th>Montant</th>
						</tr>
            <?php foreach ($this->factures as $row) :?>
            			<tr>
							<td><?=$row->numero;?></td>
							<td><?=DateLib::formatDateFromMysql($row->date);?></td>
							<td class="align-right"><?=$fmt->formatCurrency($row->montant, 'EUR');?></td>
						</tr>
        	<?php endforeach;?>
            		</tbody>
				</table>
			</fieldset>
    	<?php endif; ?>
    	</div>
	</div>
</div>
<?php endif; ?>