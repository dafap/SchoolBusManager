<?php
/**
 * Liste des stations
 *
 *
 * @project sbm
 * @package SbmGestion
 * @filesource view/sbm-gestion/transport/station-liste.phtml
 * @encodage UTF-8
 * @author DAFAP Informatique - Alain Pomirol (dafap@free.fr)
 * @date 2 nov. 2015
 * @version 2015-1.6.5
 */
use SbmCommun\Model\StdLib;
use SbmCartographie\Model\Point;

function renderCheckbox($view, $name, $id, $value)
{
    $element = new \Zend\Form\Element\Checkbox($name);
    $element->setUseHiddenElement(false)
        ->setAttribute('id', $id)
        ->setValue($value);
    return $view->formCheckbox($element);
}
$this->headLink()->appendStylesheet($this->basePath('/css/fam-icons-custom.css'));
$this->headScript()->appendFile($this->basePath() . '/js/jquery.min.js');
$jsCallback = '';
$jsTrigger = '';

$this->paginator->setDefaultItemCountPerPage($this->nb_pagination);
$this->paginator->setCurrentPageNumber($this->page);
$stations = $this->paginator->getCurrentItems();
$url_origine = $this->url('sbmgestion/transport', array(
    'action' => 'station-liste',
    'page' => $this->page
));
$url_ajouter = $this->url('sbmgestion/transport', array(
    'action' => 'station-ajout',
    'page' => $this->page
));
$url_carte = $this->url('sbmcarte', array(
    'action' => 'stations'
));
$url_rapports = $this->url('sbmgestion/transport', array(
    'action' => 'station-pdf',
    'page' => $this->page
));
$url_nondesservies = $this->url('sbmgestion/transport', array(
    'action' => 'stations-non-desservies',
    'page' => $this->page
));
$url_localiser = $this->url('sbmgestion/transport', array(
    'action' => 'station-localisation',
    'page' => $this->page
));
$url_edit = $this->url('sbmgestion/transport', array(
    'action' => 'station-edit',
    'page' => $this->page
));
$url_delete = $this->url('sbmgestion/transport', array(
    'action' => 'station-suppr',
    'page' => $this->page
));
$url_relation = $this->url('sbmgestion/transport', array(
    'action' => 'station-service',
    'id' => $this->page
));
$url_group = $this->url('sbmgestion/transport', array(
    'action' => 'station-group',
    'page' => $this->page
));
$url_retour = $this->url('sbmgestion/transport');
$hiddens = array('back' => $url_origine);
$menuImpression = $this->menuRapports($this->url('sbmgestion/transport', array(
    'action' => 'station-liste'
)), $url_rapports, 'fam-printer', null, $hiddens);
$hiddens = $menuImpression['hiddens'];
$actions = array(
    'retour' => array(
        'class' => 'fam-door-out',
        'formaction' => $url_retour,
        'title' => 'Retour'
    ),
    'rapports' => $menuImpression['content'],
    'nondesservies' => array(
        'class' => 'fam-link-break',
        'formaction' => $url_nondesservies,
        'title' => 'Non desservies'
    ),
    'carte' => array(
        'class' => 'fam-map-magnify',
        'formaction' => $url_carte,
        'title' => 'Carte des points d\'arrêt'
    ),    
    'ajouter' => array(
        'class' => 'fam-add',
        'formaction' => $url_ajouter,
        'title' => 'Nouvelle station'
    )
);
?>
<h1>Liste des stations</h1>
<div id="liste-wrapper">
	<div id="liste-header" class="clearfix">
		<div class="menu float-left"><?php echo $this->listeZoneActions($hiddens, $actions);?></div>
		<div class="flashMessenger float-right"><?php
echo $this->flashMessenger()->render('success');
echo $this->flashMessenger()->render('warning');
echo $this->flashMessenger()->render('error');
echo $this->flashMessenger()->render('info');
echo $this->flashMessenger()->render('default');
?></div>
	</div>
	<div id="liste-inner">
		<table class="stations">
			<tbody>
				<tr>
				    <th></th>
					<th>Commune</th>
					<th>Nom</th>
					<th>Visible</th>
					<th>Ouverte</th>
					<th>Inscrits</th>
					<th>Sélect.</th>
					<th></th>
				</tr>
            <?php foreach($stations as $test => $station): ?>
            <?php
                $pt = new Point($station->x, $station->y);
                $ptOk = $this->projection->isValid($pt, 'etablissements'); // stations et etablissements ont la même config
                $nbInscrits = StdLib::getParamR(array(
                    $station->stationId,
                    'total'
                ), $this->t_nb_inscrits, 0);
                $exces = ! $station->ouverte && ($nbInscrits > 0);
                // selection
                $modele = <<<EOT
$("#chk%d").change(function() {
    var action = ($(this).is(':checked'))?'check':'uncheck';
    $.ajax({
				url : '/sbmajaxtransport/'+action+'selectionstation/stationId:%d',
				success : function(data) {},
				error : function(xhr, ajaxOptions, thrownError) {
					alert(xhr.status + " " + thrownError);
				}
			});
  });
EOT;
                
                $jsTrigger .= sprintf("$('#chk%d').trigger('change');\n", $station->stationId);
                $jsCallback .= sprintf("$modele\n", $station->stationId, $station->stationId);
                ?>
                <tr
					class="<?php echo $this->cycle(array("even", "odd"))->next(); if ($exces) echo ' exces';?>">
					<td>
					<?php if (!$ptOk) : ?>
					   <i class="fam-error"></i>
					<?php endif;?>
					</td>
					<td class="commune"><?php echo $this->escapeHtml($station->commune); ?></td>
					<td class="nom"><?php echo $this->escapeHtml($station->nom); ?></td>
					<td class="visible"><?php echo $station->visible ? 'Oui' : 'Non'; ?></td>
					<td class="ouverte"><?php echo $station->ouverte ? 'Oui' : 'Non'; ?></td>
					<td class="nbinscrits"><?php echo $nbInscrits; ?></td>
					<td class="centre selection"><?php echo renderCheckbox($this, 'selection', 'chk' . $station->stationId, $station->selection)?></td>
					<td class="boutons">
            <?php
                $hiddens = array(
                    'stationId' => $station->stationId,
                    'origine' => $url_origine
                );
                $buttons = array(
                    'modifier' => array(
                        'class' => 'fam-pencil',
                        'formaction' => $url_edit,
                        'title' => 'modifier'
                    ),
                    'localiser' => array(
                        'class' => $ptOk ? 'fam-map-magnify' : 'fam-map-add',
                        'formaction' => $url_localiser,
                        'title' => $ptOk ? 'position sur la carte' : 'position manquante'
                    ),
                    'supprimer' => array(
                        'class' => 'fam-delete',
                        'formaction' => $url_delete,
                        'title' => 'supprimer'
                    ),
                    'services' => array(
                        'class' => 'fam-table-relationship',
                        'formaction' => $url_relation,
                        'title' => sprintf('circuits desservant la station %s - %s', $station->nom, $station->commune)
                    ),
                    'eleves' => array(
                        'class' => 'fam-group',
                        'formaction' => $url_group,
                        'title' => sprintf('élèves de la station %s - %s', $station->nom, $station->commune)
                    )
                );
                echo $this->listeLigneActions($station->stationId, $hiddens, $buttons);
                ?>
			        </td>
				</tr>         
            <?php endforeach;?>
            </tbody>
		</table>
	</div>
	<div id="liste-footer">
		<div class="pagination-wrapper clearfix"><?php echo $this->paginationControl($this->paginator, 'Sliding', 'sbm/pagination', array()); ?></div>
		<div class="criteres-wrapper">
         <?php echo $this->form()->openTag($this->criteres_form);?>
         <?php echo $this->formCollection($this->criteres_form, true);?>
         <?php echo $this->form()->closeTag();?>
         </div>
	</div>
</div>
<?php
$this->headScript()->captureStart();
?>
$(function() {
function triggerChange() {
<?php echo $jsTrigger;?>}
<?php echo $jsCallback;?>
});
<?php
$this->headScript()->captureEnd();