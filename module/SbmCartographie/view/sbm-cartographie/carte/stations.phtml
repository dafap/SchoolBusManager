<?php
/**
 * Carte des stations
 *
 * Affichage des stations décrites dans $this->ptStations qui est un tableau de Point
 * Chaque Point est donné dans le système géographique RGF93 (ou WGS84) en degrés décimaux.
 *
 * Le style des markers peut être changé : remplacer BUBBLE par MARKER ligne 39
 *
 * @project sbm
 * @package SbmCarographie/view/sbm-cartographie/carte
 * @filesource stations.phtml
 * @encodage UTF-8
 * @author DAFAP Informatique - Alain Pomirol (dafap@free.fr)
 * @date 23 sept. 2020
 * @version 2020-2.6.0
 */
$this->headLink()->appendStylesheet($this->basePath('/css/fam-icons-custom.css'));

// mise en place des JS de googleMaps
$this->headScript()->appendFile($this->url_api);
$this->themeJS('commun', 'carte.js');
$this->themeJS('commun', 'StyledMarker.js');
// préparation du script
$i = 0;
$aMarkers = [];
foreach ($this->ptStations as $pt) {
    $station = $pt->getAttribute('station');
    $d = [
        '<b>' . $this->escapeHtml($station->nom) . '</b>',
        $this->escapeHtml($station->alias),
        implode(' ', [
            $station->codePostal,
            $station->lacommune
        ])
    ];
    $desservie = false;
    $aServices = [];
    foreach ($station->services as $service) {
        if ($service->ligneId) {
            $aServices[] = explode(' ', $service->service);
            $desservie = true;
        }
    }
    if ($desservie && $station->ouverte) {
        $color = "#00ff00";
        $nature = "ouverte";
    } elseif ($station->ouverte) {
        $color = "ffff00";
        $nature = "non desservie";
    } else {
        $color = "#ff0000";
        $nature = "fermée";
    }
    $d[] = 'Station ' . $nature;
    if (count($aServices)) {
        $table = '<table>';
        foreach ($aServices as $ligne) {
            $table .= '<tr><td>' . implode('</td><td>', $ligne) . '</td></tr>';
        }
        $table .= '</table>';
    }
    $aMarkers[] = [
        'lat' => $pt->getLatitude(),
        'lng' => $pt->getLongitude(),
        'color' => $color,
        'text' => 'S',
        'title' => $station->nom,
        'info' => implode('<br>', array_filter($d)) . $table
    ];
}
// lancement du script
$this->inlineScript()->captureStart();
?>
const CENTRE_LAT = <?= $this->config['centre']['lat']; ?>;
const CENTRE_LNG = <?= $this->config['centre']['lng']; ?>;
const INI_ZOOM = <?= $this->config['zoom']; ?>;
initialiser("<?=$this->scheme;?>",<?= json_encode($aMarkers);?>);
<?php
$this->inlineScript()->captureEnd();
/* ========== FIN DE LA MISE EN PLACE DES JAVASCRIPTS ====== */
$hiddens = [];
$actions = [
    'cancel' => [
        'class' => 'fam-door-out',
        'title' => 'Retour'
    ]
];
?>
<h1>Points d'arrêt</h1>
<div id="carte-wrapper">
	<div id="carte-header" class="clearfix">
		<div class="menu float-left">
		<?= $this->listeZoneActions($hiddens,$actions);?>
		</div>
		<div class="float-right right-10px sbm-description">
			<span style="background-color: #ff0000; font-weight: bold;">En rouge</span>
			les points d'arrêt fermés. <span
				style="background-color: #00ff00; font-weight: bold;">En vert</span>
			les points d'arrêt ouverts.
		</div>
	</div>
	<div id="carte-inner"
		style="width: 90%; height: 500px; margin-left: auto; margin-right: auto; margin-top: 20px; margin-bottom: 20px;"></div>
</div>