<?php
/**
 * Liste des etablissements
 *
 * Cette vue reçoit une variable $t_nb_inscrits qui est un tableau associatif 
 * structuré comme indiqué dans l'exemple ci-dessous :
 * [
 *     code_etablissement => [
 *         'demandes' => effectif des demandes
 *         'transportes' => effectif des élèves transportés
 *     ],
 *     ...
 * ]
 *
 * @project sbm
 * @package SbmGestion/view/sbm-gestion/transport/
 * @filesource etablissement-liste.phtml
 * @encodage UTF-8
 * @author DAFAP Informatique - Alain Pomirol (dafap@free.fr)
 * @date 16 fév. 2019
 * @version 2019-2.5.0
 */
use SbmBase\Model\StdLib;
use SbmCartographie\Model\Point;

function renderCheckbox($view, $name, $id, $value)
{
    $element = new \Zend\Form\Element\Checkbox($name);
    $element->setUseHiddenElement(false)
        ->setAttribute('id', $id)
        ->setValue($value);
    return $view->formCheckbox($element);
}

$this->headLink()->appendStylesheet($this->basePath('/css/fam-icons-custom.css'));
$this->jQuery();
$jsCallback = '';
$jsTrigger = '';
// modèles de jsCallback pour selection, visible et desservie
$modele = <<<EOT
$("#chk%s").change(function() {
    var action = ($(this).is(':checked'))?'check':'uncheck';
    $.ajax({
				url : '/sbmajaxtransport/'+action+'selectionetablissement/etablissementId:%s',
				success : function(data) {},
				error : function(xhr, ajaxOptions, thrownError) {
					alert(xhr.status + " " + thrownError);
				}
			});
  });
$("#vis%s").change(function() {
    var action = ($(this).is(':checked'))?'check':'uncheck';
    $.ajax({
				url : '/sbmajaxtransport/'+action+'visibleetablissement/etablissementId:%s',
				success : function(data) {},
				error : function(xhr, ajaxOptions, thrownError) {
					alert(xhr.status + " " + thrownError);
				}
			});
  });
$("#des%s").change(function() {
    var action = ($(this).is(':checked'))?'check':'uncheck';
    $.ajax({
				url : '/sbmajaxtransport/'+action+'desservietablissement/etablissementId:%s',
				success : function(data) {},
				error : function(xhr, ajaxOptions, thrownError) {
					alert(xhr.status + " " + thrownError);
				}
			});
  });
EOT;

$this->paginator->setDefaultItemCountPerPage($this->count_per_page);
$this->paginator->setCurrentPageNumber($this->page);
$etablissements = $this->paginator->getCurrentItems();

$url_ajouter = $this->url('sbmgestion/transport',
    [
        'action' => 'etablissement-ajout',
        'page' => $this->page
    ]);
$url_rapports = $this->url('sbmgestion/transport',
    [
        'action' => 'etablissement-pdf',
        'page' => $this->page
    ]);
$url_carte = $this->url('sbmcarte', [
    'action' => 'etablissements'
]);
$url_edit = $this->url('sbmgestion/transport',
    [
        'action' => 'etablissement-edit',
        'page' => $this->page
    ]);
$url_delete = $this->url('sbmgestion/transport',
    [
        'action' => 'etablissement-suppr',
        'page' => $this->page
    ]);
$url_relation = $this->url('sbmgestion/transport',
    [
        'action' => 'etablissement-service',
        'id' => $this->page
    ]);
$url_group = $this->url('sbmgestion/transport',
    [
        'action' => 'etablissement-group',
        'id' => $this->page
    ]);
$url_localiser = $this->url('sbmgestion/transport',
    [
        'action' => 'etablissement-localisation',
        'page' => $this->page
    ]);
$url_retour = $this->url('sbmgestion/transport');
$hiddens = [
    'back' => $this->url('sbmgestion/transport',
        [
            'action' => 'etablissement-liste',
            'page' => $this->page
        ])
];
$menuImpression = $this->menuRapports(
    $this->url('sbmgestion/transport', [
        'action' => 'etablissement-liste'
    ]), $url_rapports, 'fam-printer', null, $hiddens);
$hiddens = $menuImpression['hiddens'];
$actions = [
    'retour' => [
        'class' => 'fam-door-out',
        'formaction' => $url_retour,
        'title' => 'Retour'
    ],
    'rapports' => $menuImpression['content'],
    'carte' => [
        'class' => 'fam-map-magnify',
        'formaction' => $url_carte,
        'title' => 'Carte des établissements'
    ],
    'ajouter' => [
        'class' => 'fam-add',
        'formaction' => $url_ajouter,
        'title' => 'Nouvel établissement scolaire'
    ]
];
?>
<h1>Liste des établissements</h1>
<div id="liste-wrapper">
	<div id="liste-header" class="clearfix">
		<div class="menu float-left"><?= $this->listeZoneActions($hiddens, $actions);?></div>
		<div class="flashMessenger float-right">
			<?= $this->flashMessenger()->render('success');?>
			<?= $this->flashMessenger()->render('warning');?>
			<?= $this->flashMessenger()->render('error');?>
			<?= $this->flashMessenger()->render('info');?>
			<?= $this->flashMessenger()->render('default');?>
		</div>
	</div>
	<div id="liste-inner">
		<table class="etablissements">
			<tbody>
				<tr>
					<th></th>
					<th>Code</th>
					<th>Nom</th>
					<th>Commune</th>
					<th>Code postal</th>
					<th>Téléphone</th>
					<th>Email</th>
					<th title="Nombre d'élèves transportés / Nombre de demandes">Effectifs</th>
					<th>Desservis</th>
					<th>Visible</th>
					<th>Sélect.</th>
					<th></th>
				</tr>
        <?php foreach($etablissements as $etablissement): ?>
        	<?php
            $pt = new Point($etablissement->x, $etablissement->y);
            $ptOk = $this->projection->isValid($pt, 'etablissement');
            $nbInscrits = StdLib::getParamR(
                [
                    $etablissement->etablissementId,
                    'transportes'
                ], $this->t_nb_inscrits, 0);
            $nbInscrits .= ' / ';
            $nbInscrits .= StdLib::getParamR(
                [
                    $etablissement->etablissementId,
                    'demandes'
                ], $this->t_nb_inscrits, 0);
            // construction des JS pour selection, visible et desservie
            $jsTrigger .= sprintf("$('#chk%s').trigger('change');\n",
                $etablissement->etablissementId);
            $jsTrigger .= sprintf("$('#vis%s').trigger('change');\n",
                $etablissement->etablissementId);
            $jsTrigger .= sprintf("$('#des%s').trigger('change');\n",
                $etablissement->etablissementId);
            $jsCallback .= str_replace('%s', $etablissement->etablissementId, "$modele\n");
            $hiddens = [
                'etablissementId' => $etablissement->etablissementId
            ];
            $buttons = [
                'modifier' => [
                    'class' => 'fam-pencil',
                    'formaction' => $url_edit,
                    'title' => 'modifier'
                ],
                'localiser' => [
                    'class' => $ptOk ? 'fam-map-magnify' : 'fam-map-add',
                    'formaction' => $url_localiser,
                    'title' => $ptOk ? 'position sur la carte' : 'position manquante'
                ],
                'supprimer' => [
                    'class' => 'fam-delete',
                    'formaction' => $url_delete,
                    'title' => 'supprimer'
                ],
                'services' => [
                    'class' => 'fam-table-relationship',
                    'formaction' => $url_relation,
                    'title' => 'circuits desservant cet établissement'
                ],
                'eleves' => [
                    'class' => 'fam-group',
                    'formaction' => $url_group,
                    'title' => 'élèves inscrits dans cet établissement scolaire'
                ]
            ];
            ?>
            	<tr
					class="petit <?= $this->cycle(["even", "odd"])->next();?>">
					<td>
					<?php if (!$ptOk) : ?>
					   <i class="fam-error"></i>
					<?php endif;?>
					</td>
					<td class="etablissementid">
						<?= $this->escapeHtml($etablissement->etablissementId); ?></td>
					<td class="nom">
						<?= $this->escapeHtml($etablissement->nom); ?></td>
					<td class="commune">
						<?= $this->escapeHtml($etablissement->commune); ?></td>
					<td class="codepostal">
						<?= $this->escapeHtml($etablissement->codePostal); ?></td>
					<td class="telephone">
						<?= $this->telephone($etablissement->telephone); ?></td>
					<td class="email">
						<?= $this->escapeHtml($etablissement->email); ?></td>
					<td class="nbinscrits">
						<?= $nbInscrits; ?></td>
					<td class="centre desservi">
						<?= renderCheckbox($this, 'desservie', 'des' . $etablissement->etablissementId, $etablissement->desservie)?></td>
					<td class="centre visible">
						<?= renderCheckbox($this, 'visible', 'vis' . $etablissement->etablissementId, $etablissement->visible)?></td>
					<td class="centre selection">
						<?= renderCheckbox($this, 'selection', 'chk' . $etablissement->etablissementId, $etablissement->selection)?></td>
					<td class="boutons">
						<?= $this->listeLigneActions($etablissement->etablissementId, $hiddens, $buttons);?>
						</td>
				</tr>         
        <?php endforeach;?>
        	</tbody>
		</table>
	</div>
	<div id="liste-footer">
		<div class="pagination-wrapper clearfix">
			<?= $this->paginationControl($this->paginator, 'Sliding', 'sbm/pagination', []); ?>
			</div>
		<div class="criteres-wrapper">
	    	<?= $this->form()->openTag($this->criteres_form);?>
	    	<?= $this->formCollection($this->criteres_form, true);?>
	    	<?= $this->form()->closeTag();?>	
        </div>
	</div>
</div>
<?php
$this->headScript()->captureStart();
?>
$(function() {
function triggerChange() {
<?= $jsTrigger;?>}
<?= $jsCallback;?>
});
<?php
$this->headScript()->captureEnd();