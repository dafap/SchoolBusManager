<?php
/**
 * Page d'entrée dans l'espace Parents - Version CCDA
 *
 * @project sbm
 * @package SbmParent/view/sbm-parent/index
 * @filesource index.phtml
 * @encodage UTF-8
 * @author DAFAP Informatique - Alain Pomirol (dafap@free.fr)
 * @date 17 mai 2021
 * @version 2018-2.4.20
 */
use SbmBase\Model\DateLib;
use SbmBase\Model\Session;

$this->headLink()->appendStylesheet($this->basePath('/css/fam-icons-custom.css'));
$this->jQuery('jquery-ui');
$this->headScript()->appendFile($this->basePath('/js/parent/index.js'));

$montantTotal = 0;
$fmt = new NumberFormatter('fr_FR', NumberFormatter::CURRENCY);
$enAttente = false;

$nbPreinscrits = $this->preinscrits->count();
$nbInscrits = $this->inscrits->count();
$nbPaiements = $this->paiements->count();
$etat = $this->etatSite['etat'];
$dateLimite = $this->etatSite['echeance']->format('d/m/Y');
$dateDebut = $this->etatSite['dateDebut']->format('d/m/Y');
$dateFin = $this->etatSite['dateFin']->format('d/m/Y');
// permanences
$du = $this->permanences['du'];
$au = $this->permanences['au'];
$url_ajoutEleve = $this->url('sbmparent', [
    'action' => 'reinscription-eleve'
]);
$url_payer = $this->url('sbmpaiement', [
    'action' => 'formulaire'
]);
$url_horaires = $this->url('sbmparent', [
    'action' => 'horaires'
]);
$url_modif_adresse = $this->url('sbmparentconfig', [
    'action' => 'modif-adresse'
]);
$url_envoi_photo = $this->url('sbmparent', [
    'action' => 'envoiphoto'
]);
$url_edit = $this->url('sbmparent', [
    'action' => 'edit-eleve'
]);
$url_delete = $this->url('sbmparent', [
    'action' => 'suppr-eleve'
]);
$url_attente = $this->url('sbmparent', [
    'action' => 'attente-eleve'
]);
?>
<div id="winpopup">
	<div id="winpopup-content"
		style="margin-left: 30px; margin-right: 30px;"></div>
</div>
<div class="flashMessenger float-right">
<?php
echo $this->flashMessenger()->render('success');
echo $this->flashMessenger()->render('warning');
echo $this->flashMessenger()->render('error');
echo $this->flashMessenger()->render('info');
echo $this->flashMessenger()->render('default');
?>
</div>
<h1>Espace parent</h1>
<?php if ($nbInscrits == 0 && $nbPreinscrits == 0) : ?>
<div id="parent-wrapper" class="explication">
	<?php if ($etat == 0) :?>
	<p>Vos enfants ne sont pas inscrits pour l'année scolaire <?= Session::get('as')['libelle'];?>.</p>
	<p>Vous pourrez les inscire entre le <?= $dateDebut;?>
	et le <?= $dateFin;?> (ou jusqu'au
	<?= $dateLimite;?> pour ceux qui sont en attente d'affectation).</p>
	<?php elseif ($etat == 1) :?>
	<p>Vous n'avez pas encore d'enfant inscrit.</p>
	<p>Avant le <?= $dateFin; ?> (ou le <?= $dateLimite; ?>
	pour ceux en attente d'orientation) afin de retenir une place :</p>
	<ul>
		<li>Inscrivez tous vos enfants qui doivent utiliser le service de
			transports scolaires</li>
		<li>Transmettez une photo d'identité qui sera imprimée sur la carte de
			transport. En cas de réinscription, si une photo est déjà présente
			sur la fiche de votre enfant, vous pourrez la conserver ou la
			changer.</li>
		<li>Payez en ligne ou transmettez votre paiement par courrier au
			service de transport.</li>
	</ul>
	<p>Si les inscriptions sont complètes dans le respect des dates
		indiquées, vous recevrez les cartes de transport courant août.</p>
	<p>Sinon, vous devrez vous présenter lors des permanences tenues du
	   <?=$du;?> au <?=$au;?> pour
		compléter l'inscription, payer et retirer les cartes mais votre
		inscription ne sera plus prioritaire et ne sera prise en compte que
		dans la mesure des places disponibles à la rentrée.</p>
	<p>
		<b>Quelque soit votre moyen de paiement, les inscriptions ne seront
			prises en compte qu'une fois le paiement enregistré.</b>
	</p>
	<p>
		<b><i>Vérifiez votre adresse et vos numéros de téléphone</i></b> puis
		cliquez sur le bouton <b><i>Inscrire un enfant</i></b> pour commencer
		les inscriptions.
	</p>
	<blockquote>
	<?php echo implode('<br>', $this->adresse);?>
	</blockquote>
	<div class="menu clearfix">
    <?php
        echo $this->listeZoneActions([],
            [
                'modif-adresse' => [
                    'class' => 'accueil default',
                    'formaction' => $url_modif_adresse,
                    'value' => 'Modifier adresse ou téléphone'
                ],
                'inscrire' => [
                    'class' => 'accueil default',
                    'formaction' => $url_ajoutEleve,
                    'value' => 'Inscrire un enfant'
                ]
            ]);
        ?>
    </div>
    <?php else :?>
    <p>Vous n'avez pas d'enfant inscrit.</p>
	<p>Les inscriptions en ligne sont fermées.</p>
	<p>Pour inscrire un enfant, prenez contact avec le service transport de
		<?php echo $this->client['name'];?>. Au delà du <?php echo $dateFin;?> les
		places seront attribuées à la rentrée en fonction des disponibilités
		dans les cars.</p>
	<?php endif;?>

</div>
<?php else : ?>
<div id="parent-wrapper">
	<div id="parent-inscrits">
    <?php if ($nbInscrits) : ?>
    <fieldset class="sbm-page1">
			<legend>Enfants inscrits</legend>
			<table class="parent eleve">
				<tbody>
					<tr>
						<th>Nom</th>
						<th>Prénom</th>
						<th>Etablissement scolaire</th>
						<th>Commune</th>
						<th>Circuit</th>
						<th>Arrêt</th>
						<th></th>
					</tr>
        <?php
        $photo_manquante = false;
        foreach ($this->inscrits as $row) {
            $photo_manquante |= ! $row['hasphoto'];
            $reseau = $this->affectations->getCorrespondances($row['eleveId']);
            $nbAffectations = $reseau->count();
            $circuit = $station = $service = [];
            $msgphoto = $row['hasphoto'] ? '' : 'Pas de photo';
            if ($nbAffectations) {
                // construction des tableaux $service, $station et $circuit sans doublons
                foreach ($reseau as $transport) {
                    $service_transporteur = $transport['service1Id'] . ' - ' .
                        $transport['transporteur1'];
                    $station_commune = $transport['station1'] . ' - ' .
                        $transport['commune1'];
                    $circuitId = $transport['circuit1Id'];
                    $key = md5(
                        sprintf('%s;%s;%d', $service_transporteur, $station_commune,
                            $circuitId));
                    $service[$key] = $service_transporteur;
                    $station[$key] = $station_commune;
                    $circuit[$key] = $circuitId;
                    $correspondance = ! empty($transport['service2Id']) ||
                        ! empty($transport['station2Id']);
                    if ($correspondance) {
                        if (! empty($transport['service2Id'])) {
                            $service_transporteur = $transport['service2Id'] . ' - ' .
                                $transport['transporteur2'];
                        } else {
                            $service_transporteur = '';
                        }
                        if (! empty($transport['station2Id'])) {
                            $station_commune = $transport['station2'] . ' - ' .
                                $transport['commune2'];
                        } else {
                            $station_commune = '';
                        }
                        if (! empty($transport['circuit2Id'])) {
                            $circuitId = $transport['circuit2Id'];
                        } else {
                            $circuitId = 0;
                        }
                        $key = md5(
                            sprintf('%s;%s;%d', $service_transporteur, $station_commune,
                                $circuitId));
                        $service[$key] = $service_transporteur;
                        $station[$key] = $station_commune;
                        $circuit[$key] = $circuitId;
                    }
                }
                $service = array_values($service);
                $station = array_values($station);
                $circuit = array_values($circuit);
            }
            $css = $this->cycle([
                "odd",
                "even"
            ])->next();
            // identité, scolarité : lignes 1 à 4
            $colonne1_4 = '<td %s' . $nbAffectations . '>' . $row['nom'] . '</td>';
            $colonne1_4 .= '<td %s' . $nbAffectations . '>' . $row['prenom'] . '</td>';
            $colonne1_4 .= '<td %s' . $nbAffectations . '>' . $row['etablissement'] .
                '</td>';
            $colonne1_4 .= '<td %s' . $nbAffectations . '>' . $row['communeEtablissement'] .
                '</td>';
            // on prépare le code HTML avant pour ajuster les "rowspan", les boutons
            // et les hiddens si nécessaire
            $boutons_ligne = [
                'horaires' => [
                    'class' => 'button ligne',
                    'formaction' => $url_horaires,
                    'value' => 'Horaires'
                ],
                'photo' => [
                    'class' => 'button ligne',
                    'formaction' => $url_envoi_photo,
                    'value' => 'Envoyer une photo'
                ]
            ];
            $nbCircuits = count($circuit);
            switch ($nbCircuits) {
                case 0:
                    if ($row['hasphoto']) {
                        // pas de bouton, pas d'affectation donc pas d'horaire
                        $code_boutons = '';
                    } else {
                        // bouton photo et pas d'horaire
                        unset($boutons_ligne['horaires']);
                        $hiddens_ligne['eleveId'] = $row['eleveId'];
                        $code_boutons = $this->listeLigneActions($row['eleveId'],
                            $hiddens_ligne, $boutons_ligne);
                    }
                    $colonne1_4 = str_replace(' %s' . $nbAffectations, '', $colonne1_4);
                    $ligneHtml = '<tr class="' . $css . '">' . $colonne1_4;
                    $ligneHtml .= '<td></td><td></td>'; // affectation
                    $ligneHtml .= "<td>$code_boutons</td><td class=\"alert\">$msgphoto</td></tr>\n";
                    break;
                case 1:
                    if (empty($circuit[0])) {
                        // il y a des points d'arrêt mais pas de circuit donc pas
                        // d'horaire
                        unset($boutons_ligne['horaires']);
                    } else {
                        $hiddens_ligne = [
                            'circuit1Id' => $circuit[0],
                            'etablissementId' => $row['etablissementId']
                        ];
                    }
                    if ($row['hasphoto']) {
                        unset($boutons_ligne['photo']);
                        if (empty($circuit[0])) {
                            $code_boutons = '';
                        } else {
                            // bouton horaires
                            $code_boutons = $this->listeLigneActions($row['eleveId'],
                                $hiddens_ligne, $boutons_ligne);
                        }
                    } else {
                        // au moins le bouton photo
                        $hiddens_ligne['eleveId'] = $row['eleveId'];
                        $code_boutons = $this->listeLigneActions($row['eleveId'],
                            $hiddens_ligne, $boutons_ligne);
                    }
                    $colonne1_4 = str_replace(' %s' . $nbAffectations, '', $colonne1_4);
                    $ligneHtml = '<tr class="' . $css . '">' . $colonne1_4; // identité,
                                                                            // scolarité
                    $ligneHtml .= '<td>' . $service[0] . '</td><td>' . $station[0] .
                        '</td>';
                    $ligneHtml .= '<td>' . $code_boutons .
                        "</td><td class=\"alert\">$msgphoto</td></tr>\n";
                    break;
                default:
                    $colonne1_4 = str_replace('%s' . $nbAffectations,
                        'rowspan="' . $nbCircuits . '"', $colonne1_4);
                    $lignesTableau = [];
                    $hiddens_ligne = [
                        'enfant' => $row['prenom'] . ' ' . $row['nom']
                    ];
                    for ($i = 0; $i < $nbCircuits; $i ++) {
                        if (! empty($circuit[$i])) {
                            $hiddens_ligne['circuit' . ($i + 1) . 'Id'] = $circuit[$i];
                        }
                        $lignesTableau[$i] = '<tr class="' . $css . '">' . $colonne1_4;
                        $lignesTableau[$i] .= '<td>' . $service[$i] . '</td><td>' .
                            $station[$i] . '</td>';
                        // on ne termine pas la ligne 0 pour pouvoir rajouter le bouton et
                        // les
                        // hiddens
                        if ($i > 0) {
                            $lignesTableau[$i] .= "</tr>\n";
                        }
                        $colonne1_4 = '';
                    }
                    // pour terminer la ligne 0
                    if (empty($hiddens_ligne)) {
                        if ($row['hasphoto']) {
                            // pas de bouton
                            $lignesTableau[0] .= "<td></td><td class=\"alert\">$msgphoto</td></tr>\n";
                        } else {
                            // bouton `Envoyer une photo`
                            $hiddens_ligne['eleveId'] = $row['eleveId'];
                        }
                    } else {
                        $hiddens_ligne['etablissementId'] = $row['etablissementId'];
                        if ($row['hasphoto']) {
                            // bouton `Horaires`
                            unset($boutons_ligne['photo']);
                        } else {
                            // les 2 boutons
                            $hiddens_ligne['eleveId'] = $row['eleveId'];
                        }
                    }
                    if (empty($hiddens_ligne) && $row['hasphoto']) {
                    } else {

                        $code_boutons = $this->listeLigneActions($row['eleveId'],
                            $hiddens_ligne, $boutons_ligne);
                        $lignesTableau[0] .= '<td rowspan="' . $nbCircuits . '">' .
                            $code_boutons .
                            "</td><td class=\"alert\"rowspan=\"$nbCircuits\">$msgphoto</td></tr>\n";
                    }
                    $ligneHtml = implode('', $lignesTableau);
                    break;
            }
            echo $ligneHtml;
        }
        ?>
            </tbody>
			</table>
		</fieldset>
<?php if ($photo_manquante): ?>
        <p class="important">Veuillez transmettre une photo d'identité
			pour obtenir la carte de transport.</p>
<?php elseif (Session::get('as')['dateDebut'] >= date('Y-m-d')):?>
<?php if ($nbInscrits > 1):?>
		<p class="sbm-description">Vous allez recevoir les cartes de transport
			par courrier courant août.</p>
<?php else :?>
        <p class="sbm-description">Vous allez recevoir la carte de
			transport par courrier courant août.</p>
<?php endif;?>
<?php endif;?>
		<p class="sbm-description">Les circuits et horaires seront
			consultables ici à partir de la dernière semaine d'août.</p>
    <?php endif; ?>
    </div>
	<div id="parent-preinscrits">
    <?php if ($nbPreinscrits) : ?>
    <fieldset class="sbm-page1">
			<legend>Enfants préinscrits</legend>
			<table class="parent eleve">
				<tbody>
					<tr>
						<th>Nom</th>
						<th>Prénom</th>
						<th>Etablissement scolaire</th>
						<th>Commune</th>
						<th>Tarif</th>
					</tr>
            <?php
        foreach ($this->preinscrits as $row) {
            $peutPayer = (max($row['distanceR1'], $row['distanceR2']) >= 1.0 &&
                $row['district'] == 1) || $row['derogation'] == 1;
            if ($row['selectionScolarite']) {
                $montantUnitaire = 'en attente(*)';
                $enAttente = true;
            } elseif ($peutPayer) {
                $montantUnitaire = $fmt->formatCurrency($this->tarifs[$row['tarifId']],
                    'EUR');
                $montantTotal += $this->tarifs[$row['tarifId']];
            } else {
                $montantUnitaire = '<span class="exces" title="Prenez contact avec le service des transports de ' .
                    $this->client['name'] . '">pas de droit au transport scolaire</span>';
                $enAttente = true;
            }
            $hiddens = [
                'id' => $row['eleveId']
            ];
            if ($etat == 1) {
                $buttons = [
                    'modifier' => [
                        'class' => 'button ligne',
                        'formaction' => $url_edit,
                        'title' => 'modifier la scolarité de ' . $row['prenom'],
                        'value' => 'Modifier ou compléter'
                    ],
                    'supprimer' => [
                        'class' => 'button ligne',
                        'formaction' => $url_delete,
                        'title' => 'supprimer l\'incription de ' . $row['prenom'],
                        'value' => 'Supprimer'
                    ]
                ];
                if ($peutPayer && $this->paiementenligne) {
                    $attenteValue = $row['selectionScolarite'] ? 'Reprendre cet enfant' : 'Mettre en attente de paiement*';
                    $attenteTitle = $row['selectionScolarite'] ? 'Remettre ' .
                        $row['prenom'] . ' dans' : 'Retirer ' . $row['prenom'] . ' de';
                    $attenteTitle .= ' la liste des inscriptions à payer';
                    $buttons['attente'] = [
                        'class' => 'button ligne',
                        'formaction' => $url_attente,
                        'title' => $attenteTitle,
                        'value' => $attenteValue
                    ];
                }
            } else {
                $buttons = [];
            }
            if ($row['hasphoto']) {
                $pasdephoto = '';
            } else {
                $hiddens['eleveId'] = $row['eleveId'];
                $buttons['photo'] = [
                    'class' => 'button ligne',
                    'formaction' => $url_envoi_photo,
                    'value' => 'Envoyer une photo'
                ];
                $pasdephoto = ' Pas de photo';
            }
            $btligne = $this->listeLigneActions($row['eleveId'], $hiddens, $buttons);
            $modeleligne = '<tr class="%s"><td>%s</td><td>%s</td><td>%s</td><td>%s</td><td>%s</td><td>%s</td><td class="alert">%s</td></tr>';
            echo sprintf($modeleligne, $this->cycle([
                "odd",
                "even"
            ])->next(), $row['nom'], $row['prenom'], $row['etablissement'],
                $row['communeEtablissement'], $montantUnitaire, $btligne, $pasdephoto);
        }
        ?>
            </tbody>
				<tfoot>
					<tr>
						<th colspan="4">Total à payer</th>
						<th><?php echo $fmt->formatCurrency($montantTotal, 'EUR'); ?></th>
					</tr>
				</tfoot>
			</table>
		</fieldset>
    <?php endif; ?>
    <?php if ($etat == 1):?>
        <div class="bouton-inscrire">
			<div class="menu clearfix">
        <?php
        $boutons = [
            'inscrire' => [
                'class' => 'button default float-right left-10px',
                'formaction' => $url_ajoutEleve,
                'value' => 'Inscrire un autre enfant'
            ]
        ];
        if ($montantTotal > 0 && $this->paiementenligne) {
            if ($enAttente) {
                $payerTitle = "valider et payer toutes les incriptions\nqui ne sont pas en attente.";
            } else {
                $payerTitle = "valider et payer toutes les inscriptions\nde la liste de enfants préinscrits.";
            }
            $boutons['payer'] = [
                'class' => 'button default float-right left-10px',
                'formaction' => $url_payer,
                'value' => 'Valider la liste et payer',
                'title' => $payerTitle
            ];
        }
        echo $this->listeZoneActions([
            'montant' => $montantTotal
        ], $boutons);
        ?>
            </div>
		</div>
        <?php
        switch ($etat) {
            case 0:
                $msg = '';
                break;
            case 1:
                $msg = <<<EOT
                L'inscription doit être réglée avant le $dateFin (ou le $dateLimite pour les élèves
                en attente d'orientation) pour retenir une place définitive dans le circuit et recevoir 
                la carte de transport par la poste.<br>
                Passé ce délai, votre demande d'inscription ne devient plus prioritaire et 
                ne sera traitée que dans la mesure des places disponibles à la rentrée. Vous 
                devrez vous rendre à la permanence qui se tiendra  du $du au $au à la Communauté de communes
                pour connaitre la suite donnée à votre demande, payer et retirer la carte de transport. 
                EOT;
                break;
            default:
                $msg = "Pour valider les préinscriptions, rendez-vous à la Communauté de communes entre le $du et le $au, lors de la distribution des cartes.";
                break;
        }
        ?>
        <?php if (! $this->paiementenligne && $montantTotal > 0) : ?>
        <p class="sbm-description">Les habitants de votre commune ne
			peuvent pas payer en ligne. Prenez contact avec le service Transport
			pour connaitre la marche à suivre pour votre cas particulier.</p>
        <?php elseif ($montantTotal > 0) : ?>
		<p class="sbm-description">
			<i id="help-preinscrits" title="Comment payer ?" class="fam-help"></i> <?php echo $msg;?>
		</p>
		<?php endif;?>
		<div id="help-preinscrits-content" class="invisible">
			<p>Vous pouvez :</p>
			<ul>
				<li style="margin-bottom: 0.4rem;">payer en ligne à l'aide d'une carte bancaire
				avant le <?= $dateFin;?> (ou le <?= $dateLimite; ?> pour les élèves en attente
				d'orientation). Vous recevrez alors la carte de transport par la poste.</li>
				<li style="margin-bottom: 0.4rem;">adresser un chèque du montant indiqué à
				l'adresse ci-dessous avant le <?= $dateFin;?> (ou le <?= $dateLimite; ?> pour
				les élèves en attente d'orientation). Vous recevrez alors la carte de transport
				par la poste.</li>
				<li>vous rendre à la Communauté de communes du <?=$du;?> au <?=$au;?> pour payer en espèces ou par chèque et
				retirer la carte de transport. Toutefois, votre demande ne sera plus prioritaire
				et ne sera satisfaite que dans la mesure des places disponibles.</li>
			</ul>
			<div class="centre">
				<?php echo $this->client['name'];?><br>
				<?php echo $this->client['adresse'][0]; ?><br>
				<?php echo $this->client['adresse'][1]; ?><br>
				<?php echo $this->client['code_postal']; ?> <?php echo $this->client['commune']; ?><br>
				Tél. <?php echo $this->telephone($this->client['telephone']); ?>
		    </div>
		</div>
    <?php endif;?>
	</div>
	<div id="parent-paiements">
    <?php if ($nbPaiements) : ?>
    <fieldset class="sbm-page1">
			<legend>Paiements enregistrés</legend>
			<table class="parent paiement">
				<tbody>
					<tr>
						<th>Date du paiement</th>
						<th>Moyen de paiement</th>
						<th>Montant</th>
					</tr>
            <?php
        foreach ($this->paiements as $row) {
            echo '<tr><td>' . DateLib::formatDateTimeFromMysql($row->datePaiement) .
                '</td><td>' . $row->modeDePaiement . '</td><td>' . $row->montant .
                '</td></tr>';
        }
        ?>
            </tbody>
			</table>
		</fieldset>
    <?php endif; ?>
    </div>
</div>
<?php endif; ?>