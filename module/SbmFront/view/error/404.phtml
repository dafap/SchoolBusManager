<?php
/**
 * Application Sbm
 * 
 * Vient du projet Skeleton
 * 
 * @project sbm
 * @package module/SbmFront
 * @filesource view/error/404.phtml
 * @encodage UTF-8
 * @author DAFAP Informatique - Alain Pomirol (dafap@free.fr)
 * @date 3 fÃ©v. 2019
 * @version 2019-2.5.0
 */
?>
<h1><?= $this->translate('A 404 error occurred') ?></h1>
<h2><?= $this->message ?></h2>

<?php if (isset($this->reason) && $this->reason): ?>

<?php
    $reasonMessage = '';
    switch ($this->reason) {
        case 'error-controller-cannot-dispatch':
            $reasonMessage = $this->translate(
                'The requested controller was unable to dispatch the request.');
            break;
        case 'error-controller-not-found':
            $reasonMessage = $this->translate(
                'The requested controller could not be mapped to an existing controller class.');
            break;
        case 'error-controller-invalid':
            $reasonMessage = $this->translate(
                'The requested controller was not dispatchable.');
            break;
        case 'error-router-no-match':
            $reasonMessage = $this->translate(
                'The requested URL could not be matched by routing.');
            break;
        default:
            $reasonMessage = $this->translate(
                'We cannot determine at this time why a 404 was generated.');
            break;
    }
    ?>

<p><?= $reasonMessage ?></p>

<?php endif ?>

<?php if (isset($this->controller) && $this->controller): ?>

<dl>
	<dt><?= $this->translate('Controller') ?>:</dt>
	<dd><?= $this->escapeHtml($this->controller) ?>
<?php
    if (isset($this->controller_class) && $this->controller_class &&
        $this->controller_class != $this->controller) {
        echo '(' .
            sprintf($this->translate('resolves to %s'),
                $this->escapeHtml($this->controller_class)) . ')';
    }
    ?>
</dd>
</dl>

<?php endif ?>

<?php if (isset($this->display_exceptions) && $this->display_exceptions): ?>

<?php if(isset($this->exception) && $this->exception instanceof Exception): ?>
<hr />
<h2><?= $this->translate('Additional information') ?>:</h2>
<h3><?= get_class($this->exception); ?></h3>
<dl>
	<dt><?= $this->translate('File') ?>:</dt>
	<dd>
		<pre class="prettyprint linenums"><?= $this->exception->getFile() ?>:<?= $this->exception->getLine() ?></pre>
	</dd>
	<dt><?= $this->translate('Message') ?>:</dt>
	<dd>
		<pre class="prettyprint linenums"><?= $this->exception->getMessage() ?></pre>
	</dd>
	<dt><?= $this->translate('Stack trace') ?>:</dt>
	<dd>
		<pre class="prettyprint linenums"><?= $this->exception->getTraceAsString() ?></pre>
	</dd>
</dl>
<?php
        $e = $this->exception->getPrevious();
        if ($e) :
            ?>
<hr />
<h2><?= $this->translate('Previous exceptions') ?>:</h2>
<ul class="unstyled">
    <?php while($e) : ?>
    <li>
		<h3><?= get_class($e); ?></h3>
		<dl>
			<dt><?= $this->translate('File') ?>:</dt>
			<dd>
				<pre class="prettyprint linenums"><?= $e->getFile() ?>:<?= $e->getLine() ?></pre>
			</dd>
			<dt><?= $this->translate('Message') ?>:</dt>
			<dd>
				<pre class="prettyprint linenums"><?= $e->getMessage() ?></pre>
			</dd>
			<dt><?= $this->translate('Stack trace') ?>:</dt>
			<dd>
				<pre class="prettyprint linenums"><?= $e->getTraceAsString() ?></pre>
			</dd>
		</dl>
	</li>
    <?php
                $e = $e->getPrevious();
            endwhile
            ;
            ?>
</ul>
<?php endif; ?>

<?php else: ?>

<h3><?= $this->translate('No Exception available') ?></h3>

<?php endif ?>

<?php endif ?>
