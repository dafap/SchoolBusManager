<?php
/**
 * Page de localisation d'une station
 *
 * La page présente une carte. Il suffit de cliquer sur la carte pour localiser la station
 *
 * @project sbm
 * @package SbmGestion/view/sbm-gestion/transport
 * @filesource station-localisation.phtml
 * @encodage UTF-8
 * @author DAFAP Informatique - Alain Pomirol (dafap@free.fr)
 * @date 23 sept. 2020
 * @version 2020-2.6.0
 */
// mise en place des JS de googleMaps
$this->headScript()->appendFile($this->outil->getUrlApi());
$this->themeJS('commun', 'localisation.js');
$this->themeJS('commun', 'StyledMarker.js');
// préparation du script
$aMarkers = [];
foreach ($this->ptStations as $pt) {
    $station = $pt->getAttribute('station');
    $d = [
        '<b>' . $this->escapeHtml($station->nom) . '</b>',
        $this->escapeHtml($station->alias),
        implode(' ', [
            $station->codePostal,
            $station->lacommune
        ])
    ];
    $desservie = false;
    $aServices = [];
    foreach ($station->services as $service) {
        if ($service->ligneId) {
            $aServices[] = explode(' ', $service->service);
            $desservie = true;
        }
    }
    if ($desservie && $station->ouverte) {
        $color = "#00ff00";
        $nature = "ouverte";
    } elseif ($station->ouverte) {
        $color = "ffff00";
        $nature = "non desservie";
    } else {
        $color = "#ff0000";
        $nature = "fermée";
    }
    $d[] = 'Station ' . $nature;
    if (count($aServices)) {
        $table = '<table>';
        foreach ($aServices as $ligne) {
            $table .= '<tr><td>' . implode('</td><td>', $ligne) . '</td></tr>';
        }
        $table .= '</table>';
    } else {
        $table = '';
    }
    $aMarkers[] = [
        'lat' => $pt->getLatitude(),
        'lng' => $pt->getLongitude(),
        'color' => $color,
        'text' => 'S',
        'title' => $station->nom,
        'info' => implode('<br>', array_filter($d)) . $table
    ];
}
$description = $this->description['station'];
if (count($this->description['services'])) {
    $table = '<table>';
    $hasServices = false;
    foreach ($this->description['services'] as $service) {
        if ($service->ligneId) {
            $aServices = explode(' ', $service->service);
            $table .= '<tr><td>' . implode('</td><td>', $aServices) . '</td></tr>';
            $hasServices = true;
        }
    }
    $table .= '</table>';
    if ($hasServices) {
        $description .= $table;
    }
}
// lancement du script (sera affiché dans le layout à la fin de la page)
$this->inlineScript()->captureStart();
?>
const CENTRE_LAT = <?= $this->outil->getCentreLat();?>;
const CENTRE_LNG = <?= $this->outil->getCentreLng();?>;
const INI_ZOOM = <?= $this->outil->getZoom(2);?>;
initialiser("<?=$this->scheme;?>","point d'arrêt","<?= $description;?>",<?= json_encode($aMarkers);?>);
<?php
$this->inlineScript()->captureEnd();
/* ========== FIN DE LA MISE EN PLACE DES JAVASCRIPTS ====== */
?>
<h1>Position d'une station sur la carte</h1>
<div id="carte-wrapper">
	<div id="carte-header" class="clearfix">
		<div class="float-left">
			<ul style="margin-top: 0;">
			<?php foreach ($this->station as $ligne) :?>
				<li><?= $ligne;?></li>
			<?php endforeach;?>
			</ul>
		</div>
		<div class="float-right left-10px" style="max-width: 700px;">
			<?= $this->form($this->form); ?>
			<?php if ($this->form->has('submit')):?>
			<p class="sbm-description">
				Cliquez sur la carte à l'emplacement de la station puis cliquez sur
				le bouton <b>'Enregistrer la localisation'</b>.<br>Utilisez le zoom
				pour plus de précision.
			</p>
			<?php endif;?>
		</div>

	</div>
	<div id="carte-inner"
		style="width: 90%; height: 500px; margin-left: auto; margin-right: auto; margin-top: 20px; margin-bottom: 20px;"></div>
</div>
